{
  "openapi": "3.0.0",
  "info": {
    "title": "Revel Demo API",
    "version": "1.0.0"
  },
  "paths": {
    "/journeys": {
      "post": {
        "summary": "Create a new journey definition",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Journey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Journey created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "journeyId": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journeys/{journeyId}/trigger": {
      "post": {
        "summary": "Start a new execution run of a specific journey for a patient",
        "parameters": [
          {
            "name": "journeyId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TriggerJourneyRequest" }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Journey run triggered",
            "headers": {
              "Location": {
                "description": "URL to monitor the run",
                "schema": { "type": "string" }
              }
            },
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TriggerJourneyResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request (e.g., non-UUID journeyId or invalid body)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          }
        }
      }
    },
    "/journeys/runs/{runId}": {
      "get": {
        "summary": "Get the status of a specific journey run",
        "parameters": [
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Current state of the run",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/JourneyRunStatusResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request (e.g., non-UUID runId)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "404": {
            "description": "Run not found",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": { "error": { "type": "string" } } }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": { "error": { "type": "string" } } }
              }
            }
          }
        }
      }
    }
    ,
    "/journeys/runs/{runId}/trace": {
      "get": {
        "summary": "Get the execution trace of a specific journey run",
        "parameters": [
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Full execution trace of the run",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RunTraceResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request (e.g., non-UUID runId)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "404": {
            "description": "Trace not found",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": { "error": { "type": "string" } } }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": { "error": { "type": "string" } } }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ValidationError": {
        "type": "object",
        "properties": {
          "error": { "type": "string" },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "path": { "type": "string" }
              }
            }
          }
        },
        "required": ["error"]
      },
      "Journey": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "start_node_id": { "type": "string" },
          "nodes": {
            "type": "array",
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/ActionNode" },
                { "$ref": "#/components/schemas/DelayNode" },
                { "$ref": "#/components/schemas/ConditionalNode" }
              ]
            }
          }
        }
      },
      "ActionNode": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["MESSAGE"] },
          "message": { "type": "string" },
          "next_node_id": { "type": ["string", "null"] }
        }
      },
      "DelayNode": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["DELAY"] },
          "duration_seconds": { "type": "number" },
          "next_node_id": { "type": ["string", "null"] }
        }
      },
      "ConditionalNode": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["CONDITIONAL"] },
          "condition": {
            "type": "object",
            "properties": {
              "field": { "type": "string" },
              "operator": { "type": "string" },
              "value": {}
            }
          },
          "on_true_next_node_id": { "type": ["string", "null"] },
          "on_false_next_node_id": { "type": ["string", "null"] }
        }
      },
      "TriggerJourneyRequest": {
        "type": "object",
        "properties": {
          "patient": { "$ref": "#/components/schemas/PatientContext" }
        },
        "required": ["patient"]
      },
      "TriggerJourneyResponse": {
        "type": "object",
        "properties": {
          "runId": { "type": "string" }
        },
        "required": ["runId"]
      },
      "PatientContext": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "age": { "type": "number" },
          "language": { "type": "string", "enum": ["en", "es"] },
          "condition": { "type": "string", "enum": ["hip_replacement", "knee_replacement"] }
        },
        "required": ["id", "age", "language", "condition"]
      },
      "JourneyRunStatusResponse": {
        "type": "object",
        "properties": {
          "runId": { "type": "string" },
          "status": { "type": "string", "enum": ["in_progress", "completed", "failed"] },
          "journeyId": { "type": "string" },
          "currentNodeId": { "type": "string" },
          "patientContext": { "type": "object", "additionalProperties": true }
        },
        "required": ["runId", "status", "journeyId", "currentNodeId", "patientContext"]
      },
      "ExecutionStep": {
        "type": "object",
        "properties": {
          "nodeId": { "type": "string" },
          "type": { "type": "string", "enum": ["MESSAGE", "DELAY", "CONDITIONAL"] },
          "startedAt": { "type": "string" },
          "finishedAt": { "type": ["string", "null"] },
          "result": {
            "oneOf": [
              { "$ref": "#/components/schemas/StepResultMessage" },
              { "$ref": "#/components/schemas/StepResultDelay" },
              { "$ref": "#/components/schemas/StepResultConditional" }
            ]
          }
        }
      },
      "StepResultMessage": {
        "type": "object",
        "properties": { "message": { "type": "string" } }
      },
      "StepResultDelay": {
        "type": "object",
        "properties": { "duration_seconds": { "type": "number" } }
      },
      "StepResultConditional": {
        "type": "object",
        "properties": {
          "field": { "type": "string" },
          "operator": { "type": "string" },
          "value": {},
          "evaluated": {},
          "outcome": { "type": "boolean" },
          "next_node_id": { "type": ["string", "null"] }
        }
      },
      "RunTraceResponse": {
        "type": "object",
        "properties": {
          "runId": { "type": "string" },
          "journeyId": { "type": "string" },
          "status": { "type": "string", "enum": ["in_progress", "completed", "failed"] },
          "startedAt": { "type": "string" },
          "finishedAt": { "type": ["string", "null"] },
          "currentNodeId": { "type": ["string", "null"] },
          "patientContext": { "$ref": "#/components/schemas/PatientContext" },
          "steps": { "type": "array", "items": { "$ref": "#/components/schemas/ExecutionStep" } }
        },
        "required": ["runId", "journeyId", "status", "startedAt", "currentNodeId", "patientContext", "steps"]
      }
    }
  }
}
